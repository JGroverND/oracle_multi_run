#!/usr/bin/env bash
# ------------------------------------------------------------------------------
# File: OracleMultiRun.shl
# Desc: run the script givien on the command line on all databases using the
#       account and password root provided
#
# Audit Trail:
# 05-Mar-2008 jgrover
#  - Original Code
#
# 08-Jan-2009 jgrover
#  - New password format
#
# 27-Feb-2009 jgrover
#  - New name, New file locations. Use ~/bin ~/Administration/Oracle/sql ~/tmp
#
# 18-Jun-2009 jgrover
#  - Moved to ~/app/omr
#  - New init file
#  - New display
#
# 22-Jun-2020 jgrover
#  - created git repo
#  - replace database list with LDAP query
#  - implemeted password encryption via gpg
#  - default OMR_HOME to current directory
#  - added information to error log
#
# 25-aug-2020 jgrover
#  - refactored variable names
#  - new directory structure
#
# ------------------------------------------------------------------------------

#
# Verify environment
# --------------------------------------
if [ -z "$OMR_HOME" ]
then
  OMR_HOME=`pwd`
fi

if [ -z "$OMR_CFG" ]
then
  OMR_CFG=$OMR_HOME/etc
fi

if [ ! -r $OMR_CFG/omr_init.rc ]
then
  echo "ERROR! Cannot read init file $OMR_CFG/omr_init.rc"
  exit 9
else
  source $OMR_CFG/omr_init.rc
fi

#
# Always run from OMR_HOME directory
# --------------------------------------
cd $OMR_HOME

#
# Parse command line
# --------------------------------------
if [ $# -lt 2 ]
then
  echo
  echo "Usage ${0}: sql_file sql_target [auto|safe]"
  exit 1
else
  OMR_SQL=${OMR_LIB}/${1}
  OMR_TGT=${2}
  shift # shift off sql file arg
  shift # shift off target arg
fi

case ${1} in
  A*|a*)
    OMR_MODE="auto" ;;
  *)
    OMR_MODE="safe" ;;
esac
shift # shift off mode arg

OMR_ARGS=$* # keep the rest to pass to sqlplus

if [ ! -f ${OMR_SQL} ]
then
    if [ ! -f ${OMR_SQL}.sql ]
    then
        echo "Missing SQL ${OMR_SQL}"
        exit 1
    else
        OMR_SQL=${OMR_SQL}.sql
    fi
fi

#
# Get busy here
# --------------------------------------
OMR_OUTPUT_DIR=${OMR_DATA}/`basename -s .sql ${OMR_SQL}`/${$}
OMR_DISPLAY_DIR="data/`basename -s .sql ${OMR_SQL}`/${$}"
mkdir --parents $OMR_OUTPUT_DIR

clear
echo "----------------------------------------"
echo "--  O R A C L E   M U L T I   R U N   --"
echo "----------------------------------------"

if [ ! -z "${DEBUG}" ]
then
  if [ "${DEBUG}" = "TRUE" ]
  then
    echo " Start time ....... : " `date`
    env | grep "OMR" | sort | awk -F"=" '{printf "%20s is %s\n", $1, $2}'
    echo "----------------------------------------"
  fi
fi

echo
echo "Database           Mode   Status"
echo "-----------------  -----  -------"

for X in `gpg --quiet --output - --decrypt $ENCRYPTED_FILE \
          | grep -v "^#" \
          | grep -v "^$" \
          | awk -F"," '{printf "SVC=\"%s\";FAM=\"%s\";PWD=\"%s\"\n", $1, $2, $3}'`
do
  eval $X

  if [ "$OMR_TGT" = "ALL"  -o \
       "$OMR_TGT" = "all"  -o \
       "$OMR_TGT" = "$SVC" -o \
       "$OMR_TGT" = "$FAM" ]
  then
    printf "%-17s  %-5s  " $SVC $OMR_MODE
    OMR_LDAP_BASE="cn=${SVC},${OMR_LDAP_CONTEXT}"

    CONNECT_STRING=`ldapsearch -x -LLL -o ldif-wrap=no \
        -b $OMR_LDAP_BASE \
        -H $OMR_LDAP_HOST \
        objectclass=orclNetService | grep orclnetdescstring | cut -d" " -f2`

    LOGF=${OMR_OUTPUT_DIR}/${SVC}.log
    ERRF=${OMR_OUTPUT_DIR}/${SVC}.err

    echo ${PWD} | ( sqlplus -s -l ${ACCT}@${CONNECT_STRING} @"${OMR_SQL}" ${OMR_MODE} ${OMR_ARGS} > ${LOGF} 2>&1 )

    if [ `grep "ORA-" ${LOGF} | wc -l` -gt 0 ]
    then
      echo "Error"
      echo "# -------- Error in ${SQL} for ${SVC}" > ${ERRF}
      cat ${LOGF} >> ${ERRF}
      echo "# --------" >> ${ERRF}
      rm ${LOGF}
    else
      echo "Complete"
    fi
  fi
done

#
# Combine all log files into a single summary file
# --------------------------------------
cat ${OMR_OUTPUT_DIR}/*.log 2>/dev/null | grep -v "^$" > ${OMR_OUTPUT_DIR}/omr.dat
cat ${OMR_OUTPUT_DIR}/*.err 2>/dev/null | grep -v "^$" > ${OMR_OUTPUT_DIR}/omr.msg

echo
echo "----------------------------------------"
echo " End time ......... : " `date`
echo " Output directory . : $OMR_DISPLAY_DIR"
echo " Output file count. : `ls -lht $OMR_OUTPUT_DIR | wc -l`"
echo " Output errors .... : $OMR_DISPLAY_DIR/omr.msg"
echo " Output combined .. : $OMR_DISPLAY_DIR/omr.dat"
echo "----------------------------------------"
